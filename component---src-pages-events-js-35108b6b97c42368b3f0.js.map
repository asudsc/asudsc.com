{"version":3,"sources":["webpack:///./src/pages/events.js","webpack:///./src/components/events/EventList.js"],"names":["Events","props","render","React","Component","EventList","state","events","componentDidMount","get","then","res","i","length","console","log","start","Date","now","push","setState","catch","err","class","this","map","event","id","name","end","location","map_url"],"mappings":"0KAEqBA,E,oBAEjB,WAAYC,GAAQ,OAChB,YAAMA,IADS,K,0GAInBC,OAAA,WACI,OACI,6BACI,kBAAC,IAAD,Q,GAToBC,IAAMC,Y,mICGrBC,E,oBAEjB,WAAYJ,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKK,MAAQ,CACTC,OAAQ,IAHG,E,kHAOnBC,kBAAA,WAAqB,IAAD,OAChBD,IAAOE,MAAMC,MAAK,SAACC,GAEf,IADA,IAAIJ,EAAS,GACJK,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAC5BE,QAAQC,IAAI,OAAQJ,EAAIC,GAAGI,OACvBL,EAAIC,GAAGI,OAASC,KAAKC,OACrBX,EAAOY,KAAKR,EAAIC,IAGxB,EAAKQ,SAAS,CACVb,cAELc,OAAM,SAACC,GACNR,QAAQC,IAAI,0BACZD,QAAQC,IAAIO,O,EAIpBpB,OAAA,WACI,OACI,yBAAKqB,MAAM,eACP,+CACCC,KAAKlB,MAAMC,OAAOkB,KAAI,SAACC,GAAD,OACdA,EAAMV,OAASC,KAAKC,OACjB,kBAAC,IAAD,CACIS,GAAID,EAAMC,GACVC,KAAMF,EAAME,KACZZ,MAAOU,EAAMV,MACba,IAAKH,EAAMG,IACXC,SAAUJ,EAAMI,SAChBC,QAASL,EAAMK,e,GAvCR5B,IAAMC","file":"component---src-pages-events-js-35108b6b97c42368b3f0.js","sourcesContent":["import React from 'react';\nimport EventsList from '../components/events/EventList';\nexport default class Events extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <EventsList />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport events from \"../../controllers/events\";\nimport EventCard from './EventCard';\nimport \"../../styles/components/EventList.scss\";\n\nexport default class EventList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: []\n        }\n    }\n\n    componentDidMount() {\n        events.get().then((res) => {\n            let events = []\n            for (let i = 0; i < res.length; i++) {\n                console.log(\"COOL\", res[i].start);\n                if (res[i].start >= Date.now()) {\n                    events.push(res[i]);\n                }\n            }\n            this.setState({\n                events\n            })\n        }).catch((err) => {\n            console.log(\"Error fetching events!\");\n            console.log(err);\n        });\n    }\n\n    render() {\n        return (\n            <div class=\"events-list\">\n                <h2>Upcoming Events</h2>\n                {this.state.events.map((event) => \n                        (event.start >= Date.now()) && (\n                            <EventCard\n                                id={event.id}\n                                name={event.name}\n                                start={event.start}\n                                end={event.end}\n                                location={event.location}\n                                map_url={event.map_url}\n                            />\n                        )\n                )}\n            </div>\n        );\n    }\n\n}"],"sourceRoot":""}